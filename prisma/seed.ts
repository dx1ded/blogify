import { PrismaClient } from "@prisma/client"

const prisma = new PrismaClient()

async function main() {
  const posts = [
    {
      id: "8d6OKAT0KWxheHNASnLT4",
      title: "A Comprehensive Guide to Next.js",
      slug: "A-Comprehensive-Guide-to-Next.js",
      content:
        '<h1 class="scroll-m-20 text-4xl font-extrabold tracking-tight"><strong>Introduction to Next.js</strong></h1><p class="leading-7 [&amp;:not(:first-child)]:mt-1"></p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Next.js is a popular open-source React framework that makes building web applications a breeze. Developed and maintained by Vercel, Next.js has gained immense popularity in the web development community due to its performance, developer-friendly features, and seamless integration with React.</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">In this comprehensive guide, we’ll explore Next.js, its core concepts, features, and how to get started with it. Whether you’re new to web development or an experienced developer looking to dive into Next.js, this guide will provide you with the knowledge you need to build powerful web applications.</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1"></p><h1 class="scroll-m-20 text-4xl font-extrabold tracking-tight"><strong>Table of Contents</strong></h1><ol class="my-6 ml-6 list-decimal [&amp;>li]:mt-2"><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">What is Next.js?</p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Key Features of Next.js</p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Getting Started with Next.js</p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Pages and Routing</p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Data Fetching</p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Styling in Next.js</p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Optimizing Performance</p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Deployment with Vercel</p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Conclusion</p></li></ol><h1 class="scroll-m-20 text-4xl font-extrabold tracking-tight"><strong>1. What is Next.js?</strong></h1><p class="leading-7 [&amp;:not(:first-child)]:mt-1"></p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Next.js is a React framework that simplifies the development of server-rendered React applications. It offers a range of features and conventions that make it easier to build modern web applications while providing excellent performance out of the box.</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Key features of Next.js include server-side rendering (SSR), static site generation (SSG), client-side routing, automatic code splitting, and an intuitive file-based routing system. These features enable developers to create fast, SEO-friendly web applications with minimal configuration.</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1"></p><h1 class="scroll-m-20 text-4xl font-extrabold tracking-tight"><strong>2. Key Features of Next.js</strong></h1><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Let’s delve deeper into some of the key features that make Next.js a preferred choice for web developers:</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1"></p><h2 class="scroll-m-20 pb-2 text-3xl font-semibold tracking-tight first:mt-0"><strong>a. Server-Side Rendering (SSR)</strong></h2><p class="leading-7 [&amp;:not(:first-child)]:mt-1">One of Next.js’ standout features is SSR, which allows rendering React components on the server instead of the client. This results in faster initial page loads and better SEO since search engines can crawl the fully rendered HTML.</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1"></p><h2 class="scroll-m-20 pb-2 text-3xl font-semibold tracking-tight first:mt-0"><strong>b. Static Site Generation (SSG)</strong></h2><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Next.js offers SSG, which pre-renders pages at build time. This approach generates static HTML files for each page, resulting in incredibly fast page loads and enabling easy deployment to content delivery networks (CDNs).</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1"></p><h2 class="scroll-m-20 pb-2 text-3xl font-semibold tracking-tight first:mt-0"><strong>c. Client-Side Routing</strong></h2><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Next.js provides a built-in client-side routing system. You can create dynamic, single-page applications (SPAs) without the need for complex routing configurations.</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1"></p><h2 class="scroll-m-20 pb-2 text-3xl font-semibold tracking-tight first:mt-0"><strong>d. Automatic Code Splitting</strong></h2><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Next.js automatically splits your JavaScript code into smaller chunks, ensuring that users only download the code necessary for the current page. This optimizes load times and performance.</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1"></p><h2 class="scroll-m-20 pb-2 text-3xl font-semibold tracking-tight first:mt-0"><strong>e. File-Based Routing</strong></h2><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Next.js simplifies routing by allowing developers to create pages using a file-based system. Simply create a JavaScript file in the “pages” directory, and Next.js handles the routing for you.</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1"></p><h1 class="scroll-m-20 text-4xl font-extrabold tracking-tight"><strong>3. Getting Started with Next.js</strong></h1><p class="leading-7 [&amp;:not(:first-child)]:mt-1">To start building with Next.js, you’ll need Node.js and npm (Node Package Manager) installed on your computer. Follow these steps to create a new Next.js project:</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1"></p><h2 class="scroll-m-20 pb-2 text-3xl font-semibold tracking-tight first:mt-0"><strong>Step 1: Create a New Next.js Project</strong></h2><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Open your terminal and run the following command to create a new Next.js project:</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">bashCopy code</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">npx create-next-app my-nextjs-app</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Replace my-nextjs-app with your desired project name.</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1"></p><h2 class="scroll-m-20 pb-2 text-3xl font-semibold tracking-tight first:mt-0"><strong>Step 2: Navigate to Your Project</strong></h2><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Once the project is created, navigate to the project directory:</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">bashCopy code</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">cd my-nextjs-app</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1"></p><h2 class="scroll-m-20 pb-2 text-3xl font-semibold tracking-tight first:mt-0"><strong>Step 3: Run Your Development Server</strong></h2><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Start the development server by running the following command:</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">bashCopy code</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">npm run dev</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">This will launch your Next.js application on <a target="_blank" rel="noopener noreferrer nofollow" class="text-blue-500 bg-gray-100 cursor-pointer rounded font-medium py-0.5 px-1" href="http://localhost:3000"><u>http://localhost:3000</u></a> by default.</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1"></p><h2 class="scroll-m-20 pb-2 text-3xl font-semibold tracking-tight first:mt-0"><strong>Step 4: Explore the Project Structure</strong></h2><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Next.js projects have a predefined project structure. Key directories include:</p><ul class="my-6 ml-6 list-disc [&amp;>li]:mt-2"><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">pages: Contains your application\'s pages. File-based routing is based on this directory\'s structure.</p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">public: Stores static assets like images, stylesheets, and fonts.</p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">styles: Holds global CSS styles for your application.</p></li></ul><h1 class="scroll-m-20 text-4xl font-extrabold tracking-tight"><strong>4. Pages and Routing</strong></h1><p class="leading-7 [&amp;:not(:first-child)]:mt-1">In Next.js, creating pages is straightforward. Each JavaScript file in the pages directory corresponds to a route. For example:</p><ul class="my-6 ml-6 list-disc [&amp;>li]:mt-2"><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">pages/index.js corresponds to the root route /.</p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">pages/about.js corresponds to the /about route.</p></li></ul><p class="leading-7 [&amp;:not(:first-child)]:mt-1">To create dynamic routes, you can use brackets in the filename, like [slug].js, to handle route parameters.</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1"></p><h1 class="scroll-m-20 text-4xl font-extrabold tracking-tight"><strong>5. Data Fetching</strong></h1><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Next.js offers multiple ways to fetch data for your pages, including:</p><ul class="my-6 ml-6 list-disc [&amp;>li]:mt-2"><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">getStaticProps: Fetches data at build time (SSG).</p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">getServerSideProps: Fetches data on each request (SSR).</p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">getInitialProps (deprecated): Used for data fetching in older Next.js projects.</p></li></ul><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Choose the appropriate method based on your application’s requirements.</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1"></p><h1 class="scroll-m-20 text-4xl font-extrabold tracking-tight"><strong>6. Styling in Next.js</strong></h1><p class="leading-7 [&amp;:not(:first-child)]:mt-1">You can style your Next.js application using various methods, including CSS modules, styled-components, or traditional CSS files. Next.js allows you to choose the approach that best fits your project’s needs.</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1"></p><h1 class="scroll-m-20 text-4xl font-extrabold tracking-tight"><strong>7. Optimizing Performance</strong></h1><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Next.js is designed with performance in mind, but there are additional steps you can take to optimize your application:</p><ul class="my-6 ml-6 list-disc [&amp;>li]:mt-2"><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Use the next/image component for responsive image loading.</p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Implement client-side data fetching with libraries like SWR or React Query.</p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Leverage automatic code splitting to reduce bundle sizes.</p></li></ul><h1 class="scroll-m-20 text-4xl font-extrabold tracking-tight"><strong>8. Deployment with Vercel</strong></h1><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Vercel, the company behind Next.js, offers seamless deployment for Next.js applications. To deploy your Next.js app on Vercel:</p><ol class="my-6 ml-6 list-decimal [&amp;>li]:mt-2"><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Sign up for a Vercel account.</p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Link your project’s GitHub repository.</p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Configure your deployment settings.</p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Deploy your application with a single click.</p></li></ol><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Vercel provides a global CDN, SSL support, and easy scaling, making it an excellent choice for hosting Next.js applications.</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1"></p><h1 class="scroll-m-20 text-4xl font-extrabold tracking-tight"><strong>9. Conclusion</strong></h1><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Next.js is a powerful React framework that simplifies web development by providing essential features like server-side rendering, static site generation, client-side routing, and automatic code splitting. With Next.js, you can build high-performance web applications with ease.</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">In this guide, we’ve covered the basics of Next.js, including its key features, how to get started, routing, data fetching, styling, performance optimization, and deployment. Now, it’s time to dive deeper into Next.js and start building your own web applications.</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">For the latest updates and detailed documentation, be sure to check the official Next.js website and GitHub repository. Happy coding!</p>',
      tags: ["NextJS", "Programming", "WebDevelopment"],
      thumbnailUrl:
        "https://ozvela7hoeedzx38.public.blob.vercel-storage.com/8d6OKAT0KWxheHNASnLT4_thumbnail-kxkocxWxT6nyLVUbj58Qul8CqyIpmm?download=1",
      createdAt: "2024-10-22T05:41:19.863Z",
      authorId: "cm29mgepj0000l0tfiv1bdtz2",
    },
    {
      id: "BkHCisGkhkkxlFhcoxg-R",
      title: "JWT vs PASETO New Era of Token-Based Authentication",
      slug: "JWT-vs-PASETO-New-Era-of-Token-Based-Authentication",
      content:
        '<p class="leading-7 [&amp;:not(:first-child)]:mt-1">APIs and modern web applications have brought token-based authentication to the forefront of secure authorization methods.</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1"><mark class="p-0.5 font-medium rounded">Offering advantages like scalability, statelessness, and enhanced security compared to traditional session-based authentication, tokens have become the preferred choice for developers worldwide.</mark></p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Among various token-based approaches, <a target="_blank" rel="noopener ugc nofollow" class="text-blue-500 bg-gray-100 cursor-pointer rounded font-medium py-0.5 px-1 be hw" href="https://jwt.io/"><u>JSON Web Token (JWT)</u></a> has gained widespread popularity because of its simplicity and ease of implementation.</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">However, concerns surrounding potential vulnerabilities and the need for meticulous implementation have led to the exploration of more robust alternatives.</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1"><a target="_blank" rel="noopener ugc nofollow" class="text-blue-500 bg-gray-100 cursor-pointer rounded font-medium py-0.5 px-1 be hw" href="https://paseto.io/"><u>Paseto (Platform-Agnostic Security Tokens)</u></a> has emerged as a better solution, directly addressing the shortcomings of JWT.</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Designed with a focus on security, Paseto provides a more secure foundation for token-based authentication by mitigating vulnerabilities and enforcing secure defaults.</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">This article delves into a comprehensive comparison of Paseto and JWT, dissecting their core functionalities, security features, and potential drawbacks.</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">By analyzing their respective strengths and weaknesses, aiming to equip you with the knowledge to make informed decisions regarding token-based authentication in their projects.</p><blockquote class="mt-6 border-l-2 pl-6 italic"><p class="leading-7 [&amp;:not(:first-child)]:mt-1">A small request 🤗 We’re aiming to get our open-source project Permify to 5k stars. Could you help us out by starring the repository?</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1"><a target="_blank" rel="noopener noreferrer nofollow" class="text-blue-500 bg-gray-100 cursor-pointer rounded font-medium py-0.5 px-1" href="https://github.com/Permify/permify"><u>https://github.com/Permify/permify</u></a></p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Your support means a lot!</p></blockquote><h1 class="scroll-m-20 text-4xl font-extrabold tracking-tight"><strong>How Does Token-Based Authentication Work?</strong></h1><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Token-based authentication provides a secure and efficient way to manage user access in modern applications. Unlike traditional session-based methods that rely on server-side storage, token-based systems issue tokens to clients upon successful authentication.</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Let’s break down the typical flow:</p><ol class="my-6 ml-6 list-decimal [&amp;>li]:mt-2"><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">User Login: The user initiates the process by providing their credentials (username and password) to the application.</p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Authentication: The application validates these credentials against a database or other authentication mechanism, verifying the user’s identity.</p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Token Generation: Upon successful authentication, the application generates a unique, digitally signed token containing relevant user information and permissions. This token acts as a secure representation of the user’s identity and access rights.</p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Token Delivery: The application sends the generated token to the client, usually included in the HTTP response header or body.</p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Client-Side Storage: Here the client securely stores the received token, often in local storage, session storage, or cookies, for use in subsequent requests.</p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Resource Requests: When the client needs to access a protected resource, it includes the token in the authorization header of the HTTP request. This signals to the server that the client is attempting to access a restricted area.</p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Token Verification: When a request with a token is received, the server confirms its validity and integrity by utilizing the corresponding secret key or public key for the token’s signing algorithm.</p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Access Control: Based on the validated token and its embedded permissions, the server determines whether the client has the necessary authorization to access the requested resource. If authorized, the server grants access and fulfills the request. Else, access is denied.</p></li></ol><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Let’s visualize the flow:</p><img class="[&amp;.ProseMirror-selectednode]:brightness-90" src="https://miro.medium.com/v2/resize:fit:700/0*cKIZZJVgCW1iGJY4.png" alt=""><p class="leading-7 [&amp;:not(:first-child)]:mt-1"><em>A flowchart illustrating the token-based authentication process</em></p><h1 class="scroll-m-20 text-4xl font-extrabold tracking-tight"><strong>What is JWT?</strong></h1><p class="leading-7 [&amp;:not(:first-child)]:mt-1">JWT stands for <em>JSON Web Token</em>. It’s an open standard (RFC 7519) defining a compact and self-contained method for securely transmitting information between parties as JSON objects.</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">JWTs are commonly used to verify user identities and granting access to private resources. Also with JWT you can securely share information between applications.</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">A JWT comprises three parts:</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Header: This defines the token type (JWT) and the signing algorithm used. Example,</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">{ "alg": "HS256", "typ": "JWT" }</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Payload: It contains statements about an entity (typically, the user), and additional data. Example,</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">{ "sub": "1234567890", "name": "John Doe", "iat": 1516239022 }</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Signature: This verifies the token’s authenticity and integrity. Its created by combining the encoded header, encoded payload, a secret, and the specified signing algorithm. Example (using HMAC SHA256):</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">HMACSHA256( base64UrlEncode(header) + "." + base64UrlEncode(payload), secret)</p><h1 class="scroll-m-20 text-4xl font-extrabold tracking-tight"><strong>How JWT Works?</strong></h1><p class="leading-7 [&amp;:not(:first-child)]:mt-1">The process involves:</p><ol class="my-6 ml-6 list-decimal [&amp;>li]:mt-2"><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Token Generation: Upon successful user authentication, the server generates a JWT containing user information and permissions. This token is signed using a secret key.</p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Token Sent to Client: The server sends the JWT to the client, usually within the HTTP response header.</p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Client Stores Token: The client securely stores the JWT, often in local storage or cookies.</p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Client Requests Resource: The client includes the JWT in the authorization header for subsequent requests to private resources.</p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Server Validates Token: The server validates the JWT’s signature and expiration time by using the secret key.</p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Access Granted/Denied: Based on the token validation, the server grants or denies access to the requested resource.</p></li></ol><h1 class="scroll-m-20 text-4xl font-extrabold tracking-tight"><strong>Pitfalls Of JWT</strong></h1><p class="leading-7 [&amp;:not(:first-child)]:mt-1">While JWT offers many advantages, it’s essential to be aware of potential pitfalls and security concerns that can arise if not implemented properly.</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Here are some key issues associated with JWT tokens:</p><h2 class="scroll-m-20 pb-2 text-3xl font-semibold tracking-tight first:mt-0"><strong>Security Risks from Improper Algorithm Choice</strong></h2><p class="leading-7 [&amp;:not(:first-child)]:mt-1">There are different ways to encrypt JWTs. If the encryption method isn’t properly chosen or implemented, it can be vulnerable to attacks.</p><h2 class="scroll-m-20 pb-2 text-3xl font-semibold tracking-tight first:mt-0"><strong>Key Management Is Issues</strong></h2><p class="leading-7 [&amp;:not(:first-child)]:mt-1">If the secret key used to create and verify JWTs is compromised, an attacker could forge tokens and gain unauthorized access.</p><h2 class="scroll-m-20 pb-2 text-3xl font-semibold tracking-tight first:mt-0"><strong>Revocation Challenges</strong></h2><p class="leading-7 [&amp;:not(:first-child)]:mt-1">It can be tricky to revoke a JWT once it’s been issued. This means that if a user’s credentials are compromised, their token might still be valid.</p><h2 class="scroll-m-20 pb-2 text-3xl font-semibold tracking-tight first:mt-0"><strong>Bypassing Signature Verification</strong></h2><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Vulnerabilities in certain JWT libraries and implementations allow for signature verification to be bypassed. These vulnerabilities could enable attackers to create forged tokens that appear legitimate to the application.</p><h1 class="scroll-m-20 text-4xl font-extrabold tracking-tight"><strong>What is PASETO (Platform Agnostic Security Token)?</strong></h1><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Paseto, which stands for <em>Platform-Agnostic Security Tokens</em>, is a specification for secure stateless tokens.</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">It provides a modern and better alternative to JWT, addressing some of its inherent vulnerabilities and emphasizing secure defaults and ease of implementation.</p><h1 class="scroll-m-20 text-4xl font-extrabold tracking-tight"><strong>Paseto Structure</strong></h1><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Unlike JWT’s single, generic structure, Paseto employs a versioned approach with two distinct token purposes:</p><ul class="my-6 ml-6 list-disc [&amp;>li]:mt-2"><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Local tokens: This is designed for stateful, server-side sessions where the tokens are securely stored on the server-side and associated with a user’s session.</p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Public tokens: This is intended for stateless applications and use cases involving public-key cryptography. These tokens can be securely transmitted and verified without needing server-side storage.</p></li></ul><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Both local and public tokens share a similar structure, consisting of three parts:</p><ul class="my-6 ml-6 list-disc [&amp;>li]:mt-2"><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Header: This section identifies the Paseto version and purpose (local or public) along with the specific cryptographic algorithm used.</p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Payload: Similar to JWT, the payload contains claims representing information about an entity (usually the user) and any additional data relevant to the application.</p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Footer (optional): The footer can include additional authenticated data, providing extra security and context to the token.</p></li></ul><h1 class="scroll-m-20 text-4xl font-extrabold tracking-tight"><strong>How PASETO Works?</strong></h1><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Paseto’s core strength lies in its focus on secure defaults and well-defined implementations.</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">It eliminates the risk of algorithm confusion, a known vulnerability in JWT, by explicitly specifying which cryptographic algorithms should be used for each version and purpose. This approach ensures that developers don’t inadvertently choose insecure options.</p><ul class="my-6 ml-6 list-disc [&amp;>li]:mt-2"><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Local tokens: Typically use symmetric-key cryptography, where the same secret key is used for both encryption and decryption. This makes them suitable for server-side session management, where the server maintains control over the key.</p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Public tokens: Employ public-key cryptography, involving a public key for encryption and a private key for decryption. This enables secure communication and verification without sharing the secret key.</p></li></ul><h1 class="scroll-m-20 text-4xl font-extrabold tracking-tight"><strong>How to Implement JWT or Paseto in Your Project?</strong></h1><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Here’s a basic guideline for implementing either JWT or Paseto in your project:</p><ol class="my-6 ml-6 list-decimal [&amp;>li]:mt-2"><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Choose a Library: Select a library for your project. There are several options available for popular languages like Python, Node.js, Java, and Ruby.</p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Generate a Secret Key: Create a strong and secure secret key to sign and verify tokens. Store it securely. For local tokens, generate a secure secret key. For public tokens, generate a public-private key pair.</p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Implement Token Generation: Develop a mechanism to generate the token upon successful user authentication, including relevant claims in the payload.</p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Implement Token Validation: Implement logic on the server-side to validate the token received in requests, verifying the signature and expiration time.</p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Secure Token Storage: On the client-side, securely store the JWT (e.g., HttpOnly cookies with the Secure flag).</p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Handle Token Expiration: Implement a strategy to handle expired tokens, such as refresh tokens or requiring re-authentication.</p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Payload extraction and verification: This steps works only for Paseto, where the payload and verified the to ensure the authenticity and integrity of the information.</p></li></ol><h1 class="scroll-m-20 text-4xl font-extrabold tracking-tight"><strong>Key Differences Between Paseto vs JWT</strong></h1><h2 class="scroll-m-20 pb-2 text-3xl font-semibold tracking-tight first:mt-0"><strong>Structure</strong></h2><img class="[&amp;.ProseMirror-selectednode]:brightness-90" src="https://miro.medium.com/v2/resize:fit:700/1*QrLUcnvgD6z80AYwGoM6Gw.png" alt=""><h2 class="scroll-m-20 pb-2 text-3xl font-semibold tracking-tight first:mt-0"><strong>Security Features</strong></h2><img class="[&amp;.ProseMirror-selectednode]:brightness-90" src="https://miro.medium.com/v2/resize:fit:700/1*jYI2NEHi9Z4VVnoupDEnFw.png" alt=""><h2 class="scroll-m-20 pb-2 text-3xl font-semibold tracking-tight first:mt-0"><strong>Use Case Scenarios</strong></h2><img class="[&amp;.ProseMirror-selectednode]:brightness-90" src="https://miro.medium.com/v2/resize:fit:700/1*cE_tAWNX-C7hIEEYFXx3hA.png" alt=""><img class="[&amp;.ProseMirror-selectednode]:brightness-90" src="https://miro.medium.com/v2/resize:fit:700/0*0kMYvIyqSGlQgbnd.png" alt=""><p class="leading-7 [&amp;:not(:first-child)]:mt-1">token structures</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">An image showing the structural difference of Paseto and JWT</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Understanding how tokens are revoked is an important aspect of building secure systems. Let’s take a closer look at token revocation in the next section.</p><h1 class="scroll-m-20 text-4xl font-extrabold tracking-tight"><strong>Token Revocation: A Deeper Dive</strong></h1><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Token revocation is an essential part of secure authentication. It ensures that compromised tokens are invalidated, preventing unauthorized access. Here’s a closer look at how it works with JWT and Paseto:</p><h2 class="scroll-m-20 pb-2 text-3xl font-semibold tracking-tight first:mt-0"><strong>JWT</strong></h2><ul class="my-6 ml-6 list-disc [&amp;>li]:mt-2"><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Because JWT is typically stateless, a server doesn’t keep track of issued tokens unless a specific revocation mechanism is used.</p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Common approaches for JWT revocation:</p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Blacklists: Maintaining a list of revoked tokens, which the server checks before granting access.</p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Token Binding: This approach links the token to a specific user agent (like a browser), making it invalid if the user agent changes.</p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Dedicated Revocation Service: A separate service can manage token revocation and communicate with the server.</p></li></ul><h2 class="scroll-m-20 pb-2 text-3xl font-semibold tracking-tight first:mt-0"><strong>Paseto</strong></h2><ul class="my-6 ml-6 list-disc [&amp;>li]:mt-2"><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Paseto’s local tokens: As discussed earlier, the server does maintain a list of issued local tokens, making revocation simpler. When a user logs out, the server can invalidate the token, preventing further access.</p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Paseto’s public tokens: These are stateless, so the server doesn’t have a list of active tokens. You would need to use a mechanism like token binding, a separate revocation service, or another solution to handle revocation.</p></li></ul><h1 class="scroll-m-20 text-4xl font-extrabold tracking-tight"><strong>Best Practices for Token Revocation:</strong></h1><ul class="my-6 ml-6 list-disc [&amp;>li]:mt-2"><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Implement a better revocation mechanism: Choose an approach that aligns with your application’s security requirements and the type of tokens you’re using.</p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Ensure proper communication: If you’re using a dedicated revocation service, make sure it is securely integrated with your application.</p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Test your revocation process: Regularly test your revocation system to confirm that it works as expected.</p></li></ul><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Beyond token revocation, there are other architectural patterns that can improve token security and management. One such pattern is the Backend for Frontend (BFF).</p><h1 class="scroll-m-20 text-4xl font-extrabold tracking-tight"><strong>The Backend for Frontend (BFF) Pattern</strong></h1><p class="leading-7 [&amp;:not(:first-child)]:mt-1">The Backend for Frontend (BFF) pattern is a powerful approach to handling authentication and token management. It often works with Oauth. The BFF involves a server-side frontend (like Next.js) that acts as a bridge between the client and the backend.</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">The BFF manages tokens server-side, only sending cookies to the client. This removes the need for client-side token storage, enhancing security.</p><h1 class="scroll-m-20 text-4xl font-extrabold tracking-tight"><strong>Benefits of the BFF pattern:</strong></h1><ul class="my-6 ml-6 list-disc [&amp;>li]:mt-2"><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Enhanced Security: Keeping tokens server-side reduces the risk of client-side vulnerabilities and token theft.</p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Simplified Client Development: Clients only need to manage cookies, making development easier.</p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Improved Performance: The BFF can optimize API requests for the client.</p></li></ul><p class="leading-7 [&amp;:not(:first-child)]:mt-1">You can consider using the BFF pattern, by assessing whether the BFF pattern aligns with your architecture and security requirements.</p><h1 class="scroll-m-20 text-4xl font-extrabold tracking-tight"><strong>Choosing Between Paseto and JWT</strong></h1><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Both Paseto and JWT offer distinct advantages and disadvantages, making the choice dependent on your specific needs and priorities.</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Here are some factors that can influence your decision:</p><h2 class="scroll-m-20 pb-2 text-3xl font-semibold tracking-tight first:mt-0"><strong>Security Needs</strong></h2><ul class="my-6 ml-6 list-disc [&amp;>li]:mt-2"><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1"><strong>Paseto</strong>: If your application demands robust security and protection against common vulnerabilities, then Paseto is probably the best fit for you. Because it is designed to mitigate issues like algorithm confusion and promote better key management practices, ensuring a higher level of security.</p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1"><strong>JWT</strong>: While JWT can be secure when implemented correctly, it necessitates meticulous attention to detail and a thorough understanding of potential pitfalls. Developers must be vigilant in avoiding common misconfiguration and vulnerabilities.</p></li></ul><h2 class="scroll-m-20 pb-2 text-3xl font-semibold tracking-tight first:mt-0"><strong>Application Architecture</strong></h2><ul class="my-6 ml-6 list-disc [&amp;>li]:mt-2"><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1"><strong>Paseto</strong>: Paseto offers a clear distinction between local and public tokens, catering to different architectural requirements. Local tokens, designed for stateful server-side sessions, are ideal for traditional web applications with session management. Public tokens, geared towards stateless applications and public-key cryptography, align well with microservices and API-driven architectures.</p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1"><strong>JWT</strong>: It’s flexible structure accommodates both stateful and stateless applications. However, this flexibility can also lead to ambiguity and potential misuse, if not handled carefully.</p></li></ul><h2 class="scroll-m-20 pb-2 text-3xl font-semibold tracking-tight first:mt-0"><strong>Developer Familiarity</strong></h2><ul class="my-6 ml-6 list-disc [&amp;>li]:mt-2"><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1"><strong>Paseto</strong>: While Paseto’s ecosystem is steadily growing, it might not yet match the breadth and depth of JWT’s support. Developers might need to invest additional effort in finding appropriate libraries and understanding Paseto’s specific implementations.</p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1"><strong>JWT</strong>: Due to its earlier adoption and widespread usage, JWT benefits from a larger community and readily available libraries, frameworks, and documentation across various programming languages. This makes it easier for developers to find resources and implement JWT within their projects.</p></li></ul><h2 class="scroll-m-20 pb-2 text-3xl font-semibold tracking-tight first:mt-0"><strong>Ecosystem Support</strong></h2><ul class="my-6 ml-6 list-disc [&amp;>li]:mt-2"><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1"><strong>Paseto</strong>: It’s ecosystem is expanding, with libraries and tools becoming increasingly available for popular programming languages. However, it may not yet match the comprehensive support of JWT, particularly for less common languages or frameworks.</p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1"><strong>JWT</strong>: JWT enjoys extensive support across numerous programming languages, frameworks, and libraries. This widespread adoption ensures readily available resources and simplifies integration with existing tools and infrastructure.</p></li></ul><h1 class="scroll-m-20 text-4xl font-extrabold tracking-tight"><strong>The Future of Web Tokens</strong></h1><p class="leading-7 [&amp;:not(:first-child)]:mt-1">The web tokens landscape is constantly evolving, driven by advancements in cryptography, changing security threats, and the ever-growing need for secure and efficient authentication mechanisms.</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Here are some emerging ideas that may shape the future of web tokens:</p><h2 class="scroll-m-20 pb-2 text-3xl font-semibold tracking-tight first:mt-0"><strong>Enhanced Security and Cryptography</strong></h2><ul class="my-6 ml-6 list-disc [&amp;>li]:mt-2"><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1"><strong>Quantum-resistant cryptography</strong>: With the looming possibility of quantum computers breaking existing cryptographic algorithms, the development and adoption of quantum-resistant algorithms will be crucial for future-proofing web tokens.</p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1"><strong>Post-quantum cryptography</strong>: Research and standardization efforts are underway to develop and integrate post-quantum cryptography algorithms into token-based systems, ensuring long-term security and resilience against quantum threats.</p></li></ul><h2 class="scroll-m-20 pb-2 text-3xl font-semibold tracking-tight first:mt-0"><strong>Decentralized Identity and Self-Sovereign Identity (SSI)</strong></h2><ul class="my-6 ml-6 list-disc [&amp;>li]:mt-2"><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1"><strong>Verifiable credentials</strong>: With the rise of verifiable credentials, this allows individuals to control and manage their digital identities, which may influence how tokens are used for authentication and authorization.</p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1"><strong>Decentralized Identifiers (DIDs)</strong>: This enables decentralized and self-owned identifiers, and could be integrated with token-based systems to enhance privacy and user control over personal data.</p></li></ul><h2 class="scroll-m-20 pb-2 text-3xl font-semibold tracking-tight first:mt-0"><strong>Improved Usability and Standardization</strong></h2><ul class="my-6 ml-6 list-disc [&amp;>li]:mt-2"><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1"><strong>Simplified token management</strong>: Efforts to streamline token generation, revocation, and renewal processes will improve user experience and developer efficiency.</p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1"><strong>Standardization of token formats and protocols</strong>: Further standardization of token formats and communication protocols will promote interoperability and simplify integration across different platforms and services.</p></li></ul><h2 class="scroll-m-20 pb-2 text-3xl font-semibold tracking-tight first:mt-0"><strong>Emerging Token Mechanisms</strong></h2><ul class="my-6 ml-6 list-disc [&amp;>li]:mt-2"><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1"><strong>Macaroons</strong>: This offer a more flexible and granular approach to authorization, allowing for delegation and attenuation of access rights.</p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1"><strong>Token binding</strong>: This mechanisms can mitigate token theft and replay attacks, enhancing the security of token-based systems.</p></li></ul><h2 class="scroll-m-20 pb-2 text-3xl font-semibold tracking-tight first:mt-0"><strong>Influence on Paseto and JWT</strong></h2><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Paseto’s focus on security and well-defined use cases positions it well for adoption in environments with high-security requirements and where standardization is valued.</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Its versioned approach allows for adaptation and integration of future cryptographic advancements.</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">JWT’s flexibility and widespread adoption may lead to its continued use in various applications. However, its security shortcomings might necessitate additional safeguards and careful implementation practices to mitigate risks.</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">The future of web tokens will probably involve a combination of existing and emerging mechanisms, each catering to specific needs and security considerations.</p><h1 class="scroll-m-20 text-4xl font-extrabold tracking-tight"><strong>Summing Up</strong></h1><p class="leading-7 [&amp;:not(:first-child)]:mt-1">In this article, we’ve highlighted the strengths and weaknesses of each token mechanism, emphasizing the importance of understanding your specific needs and priorities.</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">While JWT provides simplicity and flexibility, Paseto prioritize security and well-defined use cases.</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Evaluating factors such as security requirements, application architecture, and developer familiarity will guide you toward the most suitable option.</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Additionally, exploring emerging solutions like <a target="_blank" rel="noopener ugc nofollow" class="text-blue-500 bg-gray-100 cursor-pointer rounded font-medium py-0.5 px-1 be hw" href="https://permify.co/"><u>Permify</u></a>, which offers a comprehensive authorization platform with fine-grained access control, can further enhance your application’s security and flexibility.</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">The choice between JWT and Paseto is not a one-size-fits-all answer, but a decision based on your unique context.</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Let’s keep the conversation going! <a target="_blank" rel="noopener ugc nofollow" class="text-blue-500 bg-gray-100 cursor-pointer rounded font-medium py-0.5 px-1 be hw" href="https://discord.com/invite/n6KfzYxhPp"><u>Join our Discord community</u></a> to share your thoughts and experiences with JWT, Paseto, and other token mechanisms.</p><h1 class="scroll-m-20 text-4xl font-extrabold tracking-tight"><strong>References</strong></h1><p class="leading-7 [&amp;:not(:first-child)]:mt-1">JWT Resources:</p><ul class="my-6 ml-6 list-disc [&amp;>li]:mt-2"><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1"><a target="_blank" rel="noopener ugc nofollow" class="text-blue-500 bg-gray-100 cursor-pointer rounded font-medium py-0.5 px-1 be hw" href="https://datatracker.ietf.org/doc/html/rfc7519"><u>JWT RFC 7519</u></a></p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1"><a target="_blank" rel="noopener ugc nofollow" class="text-blue-500 bg-gray-100 cursor-pointer rounded font-medium py-0.5 px-1 be hw" href="https://jwt.io/introduction/"><u>JSON Web Token Introduction</u></a></p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1"><a target="_blank" rel="noopener ugc nofollow" class="text-blue-500 bg-gray-100 cursor-pointer rounded font-medium py-0.5 px-1 be hw" href="https://cheatsheetseries.owasp.org/cheatsheets/JSON_Web_Token_Cheat_Sheet_for_Java.html"><u>OWASP JWT Cheat Sheet</u></a></p></li></ul><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Paseto Resources:</p><ul class="my-6 ml-6 list-disc [&amp;>li]:mt-2"><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1"><a target="_blank" rel="noopener ugc nofollow" class="text-blue-500 bg-gray-100 cursor-pointer rounded font-medium py-0.5 px-1 be hw" href="https://github.com/paseto-standard/paseto-spec"><u>Paseto Specifications</u></a></p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1"><a target="_blank" rel="noopener ugc nofollow" class="text-blue-500 bg-gray-100 cursor-pointer rounded font-medium py-0.5 px-1 be hw" href="https://paragonie.com/blog/tag/paseto"><u>Paragon Initiative Enterprises Blog (Paseto)</u></a></p></li></ul><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Further Reading:</p><ul class="my-6 ml-6 list-disc [&amp;>li]:mt-2"><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1"><a target="_blank" rel="noopener ugc nofollow" class="text-blue-500 bg-gray-100 cursor-pointer rounded font-medium py-0.5 px-1 be hw" href="https://auth0.com/learn/json-web-tokens/"><u>Understanding JWTs and Their Use in APIs</u></a></p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1"><a target="_blank" rel="noopener ugc nofollow" class="text-blue-500 bg-gray-100 cursor-pointer rounded font-medium py-0.5 px-1 be hw" href="https://dev.to/techschoolguru/why-paseto-is-better-than-jwt-for-token-based-authentication-1b0c"><u>Why Paseto is Better Than JWT for Token-Based Authentication</u></a></p></li></ul>',
      tags: ["JWT", "Paseto", "Auth"],
      thumbnailUrl:
        "https://ozvela7hoeedzx38.public.blob.vercel-storage.com/HxeeNAOJchgWVQPQlxsTh_thumbnail-JtBWHkXB5z6JMD91Bk7mUlOS9xkb2x?download=1",
      createdAt: "2024-10-22T05:48:23.873Z",
      authorId: "cm29mgepj0000l0tfiv1bdtz2",
    },
    {
      id: "DqYdeaLnZdqjbCuJJhCvs",
      title: "11 Useful React.js Hack Every Developer Should Know",
      slug: "11-Useful-React.js-Hack-Every-Developer-Should-Know",
      content:
        '<p class="leading-7 [&amp;:not(:first-child)]:mt-1">React JS is one of the <strong>widely used</strong> frameworks for web front-end development. Most of the new learners are starting their careers with React JS. It’s essential to know some best practices that can help you improve your application <strong>performance</strong> and improve <strong>code quality</strong>.</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">So here are 11 React JS tips with code examples that I think are very important and that every React developer should know—</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1"></p><h2 class="scroll-m-20 pb-2 text-3xl font-semibold tracking-tight first:mt-0"><strong>1. Use Functional Components</strong></h2><p class="leading-7 [&amp;:not(:first-child)]:mt-1">In comparison with class components the functional components are simpler and more concise. There are several advantages that functional components provide such as — <strong>Reusability</strong>, <strong>Simplicity</strong>, <strong>Performance</strong>, <strong>Testing,</strong> and, <strong>Functional programming</strong>.</p><img class="[&amp;.ProseMirror-selectednode]:brightness-90" src="https://miro.medium.com/v2/resize:fit:1000/1*ZNeLMFlGgfDrTZgo3gOo3w.png" alt=""><ul class="my-6 ml-6 list-disc [&amp;>li]:mt-2"><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1"><strong>Reusability: </strong>It is easy to extract function components into small reusable components, We can also extract the logic in separate functions to reuse it at multiple places.</p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1"><strong>Simplicity: </strong>Functional components are easier to…</p></li></ul>',
      tags: ["react"],
      thumbnailUrl:
        "https://ozvela7hoeedzx38.public.blob.vercel-storage.com/DqYdeaLnZdqjbCuJJhCvs_thumbnail-3aYVjzZkwNy0kU7EDueTnILSaJXchh?download=1",
      createdAt: "2024-10-22T05:47:11.273Z",
      authorId: "cm29mgepj0000l0tfiv1bdtz2",
    },
    {
      id: "IZ3N8SoSCZ7wW9REJdwKs",
      title: "Why I Use RTK Query for API Calls in React",
      slug: "Why-I-Use-RTK-Query-for-API-Calls-in-React",
      content:
        '<h1 class="scroll-m-20 text-4xl font-extrabold tracking-tight"><strong>What is Redux</strong></h1><p class="leading-7 [&amp;:not(:first-child)]:mt-1">A lot of people think of Redux as a state management library, which it is. To them, the main value of Redux is that it makes it possible to access (and change) the application state from anywhere in the application. To me, this misses the point of using something like Redux, so let’s zoom out a bit and take another look.</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">We’ve all seen this diagram, or something like it:</p><img class="[&amp;.ProseMirror-selectednode]:brightness-90" src="https://miro.medium.com/v2/resize:fit:700/1*yYkitaR24SuFNXYyTxL1xA.gif" alt="Animation of action being dispatched from the UI with a payload that updates the store, which in turn updates the UI with the new state."><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Source: <a target="_blank" rel="noopener ugc nofollow" class="text-blue-500 bg-gray-100 cursor-pointer rounded font-medium py-0.5 px-1 be hw" href="https://redux-toolkit.js.org/rtk-query/overview"><u>Redux Fundamentals</u></a> tutorial.</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">You can see that, in this model, the UI has a place to display the current amount from the store, and buttons that the user can click to indicate she wants to deposit or withdraw money. As soon as one of those buttons is clicked, we move <em>outside</em> of the component to dispatch the action based on what the user has requested. Note that at this point, the state has not changed. Next, the action arrives at the store, and the reducer looks at it to decide what, if anything, to do about the user’s request. If the reducer decides to honor the user\'s request, that…</p>',
      tags: ["redux"],
      thumbnailUrl:
        "https://ozvela7hoeedzx38.public.blob.vercel-storage.com/IZ3N8SoSCZ7wW9REJdwKs_thumbnail-fyoZ256dWq4I9EQ0bMDQotzBDF9yu1?download=1",
      createdAt: "2024-10-22T05:45:35.958Z",
      authorId: "cm29mgepj0000l0tfiv1bdtz2",
    },
    {
      id: "PzVtYJN1YCE-NH9BgamVM",
      title: "This new JavaScript operator is an absolute game changer",
      slug: "This-new-JavaScript-operator-is-an-absolute-game-changer",
      content:
        '<p class="leading-7 [&amp;:not(:first-child)]:mt-1">An amazing new JavaScript operator has arrived and things are not looking too good for try-catch!</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">With the new <strong>safe assignment operator, </strong>you\'ll stop writing code like this:</p><img class="[&amp;.ProseMirror-selectednode]:brightness-90" src="https://miro.medium.com/v2/resize:fit:700/1*X6Uc4EocVsFhhrJEG7PrgA.png" alt=""><p class="leading-7 [&amp;:not(:first-child)]:mt-1">And start writing code like this:</p><img class="[&amp;.ProseMirror-selectednode]:brightness-90" src="https://miro.medium.com/v2/resize:fit:700/1*2jpy63Ip9VuXantyGZab6A.png" alt=""><p class="leading-7 [&amp;:not(:first-child)]:mt-1">We’ve completely eradicated the deep nesting. The code is far cleaner and more readable.</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Instead of getting the error in the clunky catch block:</p><img class="[&amp;.ProseMirror-selectednode]:brightness-90" src="https://miro.medium.com/v2/resize:fit:700/1*EVKpxdNMaJUkAgJ3kH_IVQ.png" alt=""><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Now we do everything in just one line.</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1"><mark class="p-0.5 font-medium rounded">Instead of failing loudly and proudly, ?= tells the error to shut up and let us decide what to do with it.</mark></p>',
      tags: ["operators", "javascript"],
      thumbnailUrl:
        "https://ozvela7hoeedzx38.public.blob.vercel-storage.com/PzVtYJN1YCE-NH9BgamVM_thumbnail-CPuHd0o0WZRXb0N3oe2vTlZNp574Gw?download=1",
      createdAt: "2024-10-22T05:44:02.157Z",
      authorId: "cm29mgepj0000l0tfiv1bdtz2",
    },
    {
      id: "RKouy5FZuxQPBYdhSJ7d2",
      title: "Desire, data, and doubt - the sacred fundamentals of human interaction",
      slug: "Desire-data-and-doubt-the-sacred-fundamentals-of-human-interaction",
      content:
        '<p class="leading-7 [&amp;:not(:first-child)]:mt-1">Artwork by <a target="_blank" rel="noopener ugc nofollow" class="text-blue-500 bg-gray-100 cursor-pointer rounded font-medium py-0.5 px-1 be hw" href="https://stevensaunders.artstation.com/projects/B1Je3l"><u>Steven Saunders</u></a>, a recreation of the original paperback cover by <a target="_blank" rel="noopener ugc nofollow" class="text-blue-500 bg-gray-100 cursor-pointer rounded font-medium py-0.5 px-1 be hw" href="https://en.wikipedia.org/wiki/Vincent_Di_Fate"><u>Vin Di Fate</u></a></p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">A few weeks ago, I finished reading <em>God-Emperor of Dune </em>by Frank Herbert. It’s a heart-wrenching and disturbing masterpiece. The protagonist of the book says the following about human behavior:</p><blockquote class="mt-6 border-l-2 pl-6 italic"><p class="leading-7 [&amp;:not(:first-child)]:mt-1">“Desire brings the participants together. Data sets the limits of their dialogue. Doubt frames the questions.”</p></blockquote><p class="leading-7 [&amp;:not(:first-child)]:mt-1"><mark class="p-0.5 font-medium rounded">According to </mark><a target="_blank" rel="noopener" class="text-blue-500 bg-gray-100 cursor-pointer rounded font-medium py-0.5 px-1 be hw" href="https://uxdesign.cc/designing-with-ai-sci-fi-book-covers-from-parallel-universes-d39cdda0a48f?gi=88190924c2fc"><u><mark class="p-0.5 font-medium rounded">Herbert</mark></u></a><mark class="p-0.5 font-medium rounded">, any agreement or interaction between individuals or groups is an “agreement tripod” — like a table with three legs — based on the three fundamentals D-s: </mark><strong><mark class="p-0.5 font-medium rounded">data, desire, and doubt</mark></strong><mark class="p-0.5 font-medium rounded">. This concept perfectly fits how users behave when interacting with digital and non-digital objects.</mark></p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Let’s break it down with an example:</p><ol class="my-6 ml-6 list-decimal [&amp;>li]:mt-2"><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Say I want some tea — that’s <strong>desire</strong>. It’s the motivation that sparks action.</p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">I need to decide what type of tea to prepare. I have 15 different kinds in the cupboard, so now I have to analyze the options. Is it time for something spicy, strong, or fruity? That’s <strong>data</strong> analysis — sorting through the available information to make a choice.</p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">The instructions on the packaging state: “Add two pinches to the…</p></li></ol>',
      tags: ["desire", "data"],
      thumbnailUrl:
        "https://ozvela7hoeedzx38.public.blob.vercel-storage.com/RKouy5FZuxQPBYdhSJ7d2_thumbnail-kA921igXlxXoCD7P16erVJ3ZZRuHS4?download=1",
      createdAt: "2024-10-22T05:51:37.004Z",
      authorId: "cm29mgepj0000l0tfiv1bdtz2",
    },
    {
      id: "UV8VEbmKom3rlXywF621t",
      title: "If You Can Answer These 7 Questions Correctly You’re Decent at JavaScript",
      slug: "If-You-Can-Answer-These-7-Questions-Correctly-You're-Decent-at-JavaScript",
      content:
        '<p class="leading-7 [&amp;:not(:first-child)]:mt-1">JavaScript can be a little tricky sometimes, even when you’re dealing with simple-looking problems.</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Here are seven questions that test different parts of JavaScript.</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">They look easy, but they can catch you off guard! If you can answer these, you’ve got a good handle on JavaScript!</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1"><a target="_blank" rel="noopener ugc nofollow" class="text-blue-500 bg-gray-100 cursor-pointer rounded font-medium py-0.5 px-1 be hw" href="https://arnold-gunter.ck.page/78ce8a5010"><u>JOIN MY FREE WEEKLY WEBDEV NEWSLETTER!</u></a></p><h1 class="scroll-m-20 text-4xl font-extrabold tracking-tight"><strong>Question 1: What’s the Result of 0.1 + 0.2 === 0.3?</strong></h1><p class="leading-7 [&amp;:not(:first-child)]:mt-1">console.log(0.1 + 0.2 === 0.3);</p><h2 class="scroll-m-20 pb-2 text-3xl font-semibold tracking-tight first:mt-0"><strong>Answer:</strong></h2><p class="leading-7 [&amp;:not(:first-child)]:mt-1">The result is false.</p><h2 class="scroll-m-20 pb-2 text-3xl font-semibold tracking-tight first:mt-0"><strong>Explanation:</strong></h2><p class="leading-7 [&amp;:not(:first-child)]:mt-1">In JavaScript, numbers with decimals (called floating-point numbers) don’t always add up the way we expect.</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Due to how floating-point numbers are represented in JavaScript, 0.1 + 0.2 doesn’t exactly equal 0.3. Instead, it results in 0.30000000000000004, leading to the comparison being false. This issue comes from the binary approximation of decimal numbers in JavaScript.</p><h1 class="scroll-m-20 text-4xl font-extrabold tracking-tight"><strong>Question 2: What’s the Result of "5" + 3 and "5" - 3?</strong></h1><p class="leading-7 [&amp;:not(:first-child)]:mt-1">console.log("5" + 3); console.log("5" - 3);</p><h2 class="scroll-m-20 pb-2 text-3xl font-semibold tracking-tight first:mt-0"><strong>Answer:</strong></h2>',
      tags: ["javascript"],
      thumbnailUrl:
        "https://ozvela7hoeedzx38.public.blob.vercel-storage.com/UV8VEbmKom3rlXywF621t_thumbnail-npfZkncagQ9Dzb7VSfzn6K9Of7Ftu2?download=1",
      createdAt: "2024-10-22T05:46:31.551Z",
      authorId: "cm29mgepj0000l0tfiv1bdtz2",
    },
    {
      id: "h7BMkhgSVEfQyc584LgOo",
      title: "Write a React Component Like a Pro",
      slug: "Write-a-React-Component-Like-a-Pro",
      content:
        '<p class="leading-7 [&amp;:not(:first-child)]:mt-1">In the world of React, writing components is an art. It’s not just about making them work — it’s about making them work well. Today, we’re going to look at how to craft your components like a pro, focusing on readability, reusability, and efficiency.</p><h2 class="scroll-m-20 pb-2 text-3xl font-semibold tracking-tight first:mt-0"><strong>Create a List Component</strong></h2><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Let’s start with a basic List component:</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">// src/components/List.js import React from \'react\'; const List = ({ data }) =&gt; { return ( &lt;ul&gt; {<a target="_blank" rel="noopener noreferrer nofollow" class="text-blue-500 bg-gray-100 cursor-pointer rounded font-medium py-0.5 px-1" href="http://data.map">data.map</a>((item, index) =&gt; ( &lt;li key={index}&gt;{item}&lt;/li&gt; ))} &lt;/ul&gt; ); }; export default List;</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">This component takes an array of data and renders it as a list.</p><h2 class="scroll-m-20 pb-2 text-3xl font-semibold tracking-tight first:mt-0"><strong>Enhancing Components with HOCs</strong></h2><p class="leading-7 [&amp;:not(:first-child)]:mt-1"><mark class="p-0.5 font-medium rounded">Higher-Order Components (HOCs) are a powerful pattern for reusing component logic. They essentially wrap a component to extend its functionality without altering its structure.</mark></p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">For example, a withLoading HOC can be used to display a loading state:</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">// src/hocs/withLoading.js import React, { useState } from \'react\'; function withLoading(Component) { return function WithLoading({ isLoading, ...props }) { if (isLoading) { return &lt;div&gt;Loading...&lt;/div&gt;; } return &lt;Component {...props} /&gt;; }; } export default withLoading;</p>',
      tags: ["react"],
      thumbnailUrl:
        "https://ozvela7hoeedzx38.public.blob.vercel-storage.com/h7BMkhgSVEfQyc584LgOo_thumbnail-nhFWaDd1ZUvKFYUFFpZbU8keAT0OQo?download=1",
      createdAt: "2024-10-22T05:50:05.243Z",
      authorId: "cm29mgepj0000l0tfiv1bdtz2",
    },
    {
      id: "kF8Spu3yjgiPB3AU_SfZ7",
      title: "Building a Micro Frontend Application with Next.js 14.2 and Tailwind CSS — Part-I",
      slug: "Building-a-Micro-Frontend-Application-with-Next.js-14.2-and-Tailwind-CSS-Part-I",
      content:
        '<p class="leading-7 [&amp;:not(:first-child)]:mt-1">In modern web development, micro frontend architecture has gained popularity for its ability to scale and modularize large applications. Micro frontends allow teams to independently develop, test, and deploy features, leading to faster iteration cycles and improved maintainability. In this tutorial, we’ll explore how to build a micro frontend application using Next.js 14.2 and enhance it with Tailwind CSS for consistent styling across components.</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1"><strong>Note:</strong> This tutorial assumes a basic understanding of Next.js and Tailwind CSS. If you’re new to micro frontends or need a refresher on these technologies, please refer to our detailed blog post <a target="_blank" rel="noopener" class="text-blue-500 bg-gray-100 cursor-pointer rounded font-medium py-0.5 px-1 be hw" href="https://tarzzotech.medium.com/exploring-the-power-of-microfrontend-with-react-and-webpack-5-c511ea2fdfd6"><u>Understanding Micro Frontends</u></a> for a comprehensive introduction.</p><h2 class="scroll-m-20 pb-2 text-3xl font-semibold tracking-tight first:mt-0"><strong>Table of Contents</strong></h2><ol class="my-6 ml-6 list-decimal [&amp;>li]:mt-2"><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1"><strong>Project Setup</strong></p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1"><strong>Installing required packages</strong></p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1"><strong>Setting Up the Micro Frontend Configuration</strong></p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1"><strong>Creating components into the Main Application</strong></p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1"><strong>Creating components into the Shop Application</strong></p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1"><strong>Integrating the Shop Application into Main Application</strong></p></li><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1"><strong>Fixing Hydration Error</strong></p></li></ol>',
      tags: ["react", "NextJS"],
      thumbnailUrl:
        "https://ozvela7hoeedzx38.public.blob.vercel-storage.com/kF8Spu3yjgiPB3AU_SfZ7_thumbnail-SfIPG0clXm0t2bkHECTnE8eoxJCFuy?download=1",
      createdAt: "2024-10-22T05:47:44.040Z",
      authorId: "cm29mgepj0000l0tfiv1bdtz2",
    },
    {
      id: "lzPcb_GPLlnwYTX9XdrpX",
      title: "Stop using double negatives or nobody will understand your code",
      slug: "Stop-using-double-negatives-or-nobody-will-understand-your-code",
      content:
        '<p class="leading-7 [&amp;:not(:first-child)]:mt-1">This is a big mistake many developers make that makes code cryptic and unreadable.</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">❌Don’t do this:</p><img class="[&amp;.ProseMirror-selectednode]:brightness-90" src="https://miro.medium.com/v2/resize:fit:700/1*ialMkpBE0vVqL0KKVZzhpA.png" alt=""><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Double negatives like this makes it much harder to think about the logic and conditionals in your code.</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">It’s much better to name them positively:</p><img class="[&amp;.ProseMirror-selectednode]:brightness-90" src="https://miro.medium.com/v2/resize:fit:700/1*s99H0ul5xyJDR7cpCGqhvQ.png" alt=""><p class="leading-7 [&amp;:not(:first-child)]:mt-1">There is no indirection and your brain takes zero time to parse this.</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Just imagine the pain of trying to understand this:</p><blockquote class="mt-6 border-l-2 pl-6 italic"><p class="leading-7 [&amp;:not(:first-child)]:mt-1"><em>I didn’t not forget about not being unable to use the account.</em></p></blockquote><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Lol I couldn’t even understand it myself for a while even though I made it up.</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Compare to the far more natural way you’d expect from a sensible human:</p><blockquote class="mt-6 border-l-2 pl-6 italic"><p class="leading-7 [&amp;:not(:first-child)]:mt-1"><em>I remembered that I could use the account.</em></p></blockquote><h1 class="scroll-m-20 text-4xl font-extrabold tracking-tight"><strong>Control flow negation</strong></h1><p class="leading-7 [&amp;:not(:first-child)]:mt-1">This is a more delicate form of double negation you need to know about:</p>',
      tags: ["javascript"],
      thumbnailUrl:
        "https://ozvela7hoeedzx38.public.blob.vercel-storage.com/lzPcb_GPLlnwYTX9XdrpX_thumbnail-05IExTyShcg6gQi0FPC2NvOozTFMus?download=1",
      createdAt: "2024-10-22T05:50:34.636Z",
      authorId: "cm29mgepj0000l0tfiv1bdtz2",
    },
    {
      id: "q0ZUokBMqD5YEaBUrn1C7",
      title: "Why do many people not recommend using JWT?",
      slug: "Why-do-many-people-not-recommend-using-JWT",
      content:
        '<blockquote class="mt-6 border-l-2 pl-6 italic"><p class="leading-7 [&amp;:not(:first-child)]:mt-1"><em>My article is open to everyone; non-member readers can click this </em><a target="_blank" rel="noopener" class="text-blue-500 bg-gray-100 cursor-pointer rounded font-medium py-0.5 px-1 be hw" href="https://medium.com/@haiou-a/why-do-many-people-not-recommend-using-jwt-9147b2c899f8?sk=c497651e1aef92eeba8dd18490303113"><em><u><mark class="p-0.5 font-medium rounded">link</mark> </u></em></a><em>to read the full text.</em></p></blockquote><p class="leading-7 [&amp;:not(:first-child)]:mt-1"></p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">If you often look at online tutorials for building projects, you’ll notice that many of them use JWT.</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">But is it really safe?</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Why do so many people advise against using it? This article will provide you with a comprehensive understanding of JWT and its pros and cons.</p><h1 class="scroll-m-20 text-4xl font-extrabold tracking-tight"><strong>What is JWT?</strong></h1><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Here is the official website:<a target="_blank" rel="noopener ugc nofollow" class="text-blue-500 bg-gray-100 cursor-pointer rounded font-medium py-0.5 px-1 be hw" href="https://jwt.io/"><u> JSON Web Tokens — </u></a><a target="_blank" rel="noopener noreferrer nofollow" class="text-blue-500 bg-gray-100 cursor-pointer rounded font-medium py-0.5 px-1" href="http://jwt.io"><u>jwt.io</u></a></p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">This is what JWT is.</p><img class="[&amp;.ProseMirror-selectednode]:brightness-90" src="https://miro.medium.com/v2/resize:fit:700/1*aAH0mMomx1dLidhoNCVmNw.png" alt=""><p class="leading-7 [&amp;:not(:first-child)]:mt-1">JWT stands for JSON Web Token.</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">If you’re not familiar with JWT, don’t worry! They’re not that complicated!</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">You can think of JWT as a piece of JSON data that you can verify to confirm that <strong>the data</strong> comes from someone you trust.</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Of course, we won’t go into how it’s implemented here, but if you’re interested, you can look into it yourself.</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Now, let’s talk about its process:</p><ol class="my-6 ml-6 list-decimal [&amp;>li]:mt-2"><li><p class="leading-7 [&amp;:not(:first-child)]:mt-1">When you log in to a website, the website generates a <strong>JWT</strong> and sends it to you.</p></li></ol>',
      tags: ["javascript"],
      thumbnailUrl:
        "https://ozvela7hoeedzx38.public.blob.vercel-storage.com/q0ZUokBMqD5YEaBUrn1C7_thumbnail-DxI65SGwgwiKV1dypJCMtuE0NMRNIP?download=1",
      createdAt: "2024-10-22T05:44:52.847Z",
      authorId: "cm29mgepj0000l0tfiv1bdtz2",
    },
    {
      id: "sDb1but0HPP2PjcKbaUHx",
      title: "15 Weird and Tricky React Hooks Interview Questions with Detailed Answers",
      slug: "15-Weird-and-Tricky-React-Hooks-Interview-Questions-with-Detailed-Answers",
      content:
        '<p class="leading-7 [&amp;:not(:first-child)]:mt-1"><strong>1. What is the difference between useEffect and useLayoutEffect? When would you use one over the other?</strong></p><p class="leading-7 [&amp;:not(:first-child)]:mt-1"><strong>Answer</strong>:</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">• useEffect runs asynchronously after the render is committed to the screen, while useLayoutEffect runs synchronously after all DOM mutations but before the browser paints.</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">• Use useEffect for side effects that don’t require immediate execution (e.g., data fetching, subscriptions).</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">• Use useLayoutEffect for operations that need to happen before the user sees the result (e.g., measurements, modifying DOM elements).</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1"><strong>Example</strong>:</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">useEffect(() =&gt; { console.log(\'useEffect\'); // Runs after paint }); useLayoutEffect(() =&gt; { console.log(\'useLayoutEffect\'); // Runs before paint });</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1"><strong>2. Can you explain how to avoid an infinite loop with useEffect?</strong></p><p class="leading-7 [&amp;:not(:first-child)]:mt-1"><strong>Answer</strong>: An infinite loop occurs when useEffect depends on a value that updates inside it, causing the effect to re-run continuously.</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1"><strong>Example</strong> (Incorrect):</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">useEffect(() =&gt; { setCount(count + 1); // Updating `count` in useEffect }, [count]); // Triggers re-renders infinitely</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1"><strong>Solution</strong>: Ensure that dependencies don’t cause state changes within the effect, or use a conditional check.</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1"><strong>3. What are stale closures in useEffect? How can you prevent them?</strong></p>',
      tags: ["react hooks", "react"],
      thumbnailUrl:
        "https://ozvela7hoeedzx38.public.blob.vercel-storage.com/sDb1but0HPP2PjcKbaUHx_thumbnail-Fo1AyzbK7gUqv62n9Zg33kAkovPKC2?download=1",
      createdAt: "2024-10-22T05:52:33.937Z",
      authorId: "cm29mgepj0000l0tfiv1bdtz2",
    },
    {
      id: "wEPibX_pyjsSRA-VrO6OJ",
      title: "5 amazing new JavaScript features in ES15 (2024)",
      slug: "5-amazing-new-JavaScript-features-in-ES15-(2024)",
      content:
        '<h1 class="scroll-m-20 text-4xl font-extrabold tracking-tight"><strong>1. Native array group-by is here</strong></h1><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Object.groupBy():</p><img class="[&amp;.ProseMirror-selectednode]:brightness-90" src="https://miro.medium.com/v2/resize:fit:700/1*ydcyLOTGmXdSmJiu505cCQ.png" alt=""><img class="[&amp;.ProseMirror-selectednode]:brightness-90" src="https://miro.medium.com/v2/resize:fit:700/1*IgVPcPxjbLBMuvZ3i5U6NQ.png" alt=""><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Literally the only thing keeping dinosaur Lodash alive — no more!</p><img class="[&amp;.ProseMirror-selectednode]:brightness-90" src="https://miro.medium.com/v2/resize:fit:700/1*Els8Ml2EUJbjkMeLhLf_Wg.png" alt=""><p class="leading-7 [&amp;:not(:first-child)]:mt-1">I was expecting a new instance method like Array.prototype.groupBy but they made it static for whatever reason.</p><p class="leading-7 [&amp;:not(:first-child)]:mt-1">Then we have Map.groupBy to group with object keys:</p><img class="[&amp;.ProseMirror-selectednode]:brightness-90" src="https://miro.medium.com/v2/resize:fit:700/1*4KAWqVVcteC96cJ8NqZOaw.png" alt="">',
      tags: ["javascript", "es15"],
      thumbnailUrl:
        "https://ozvela7hoeedzx38.public.blob.vercel-storage.com/wEPibX_pyjsSRA-VrO6OJ_thumbnail-xi3ahpvGx39NYwb9NZlIVK1H1hQ7Ne?download=1",
      createdAt: "2024-10-22T05:42:50.985Z",
      authorId: "cm29mgepj0000l0tfiv1bdtz2",
    },
  ]

  for (const post of posts) {
    await prisma.post.create({
      data: post,
    })
  }
}

main()
  .then(async () => {
    await prisma.$disconnect()
  })
  .catch(async (e: unknown) => {
    console.error(e)
    await prisma.$disconnect()
    process.exit(1)
  })
