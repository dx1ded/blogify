name: CI/CD

on:
  push:
    branches:
      - main

jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    environment: Application-Build
    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create .env file
        run: |
          cat > .env << EOF
          GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
          FACEBOOK_CLIENT_ID=${{ secrets.FACEBOOK_CLIENT_ID }}
          FACEBOOK_CLIENT_SECRET=${{ secrets.FACEBOOK_CLIENT_SECRET }}
          GITHUB_CLIENT_ID=${{ secrets.GH_CLIENT_ID }}
          GITHUB_CLIENT_SECRET=${{ secrets.GH_CLIENT_SECRET }}
          NEXTAUTH_URL=${{ vars.NEXTAUTH_URL }}
          NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}
          OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
          SALT_ROUNDS=${{ secrets.SALT_ROUNDS }}
          BLOB_READ_WRITE_TOKEN=${{ secrets.BLOB_READ_WRITE_TOKEN }}
          DB_URL=postgresql://${{ secrets.DB_USERNAME }}:${{ secrets.DB_PASSWORD }}@${{ secrets.DB_HOST }}:${{ secrets.DB_PORT }}/blogify
          EOF

      - name: Build and push client
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_REPO }}:latest
          secret-files: |
            env_file=.env

  deploy:
    needs: [build-docker-image]
    runs-on: ubuntu-latest
    steps:
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          passphrase: ${{ secrets.VPS_SSH_PASSPHRASE }}
          script: |
            cd ./www
            export BLOGIFY_IMAGE=${{ secrets.DOCKERHUB_REPO }}:latest
            docker compose down blogify
            docker rmi ${{ secrets.DOCKERHUB_REPO }}:latest
            docker compose up traefik blogify -d --no-recreate
